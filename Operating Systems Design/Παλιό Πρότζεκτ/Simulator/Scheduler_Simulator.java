/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Simulator;

import java.util.Date;

/**
 *
 * @author Sakis
 */
public class Scheduler_Simulator extends javax.swing.JFrame {

    /**
     * Creates new form Simulator_FCFS
     */
    public Scheduler_Simulator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        infoLog = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        startSimBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        diagnosticsLog = new javax.swing.JTextArea();
        copyrightLabel = new javax.swing.JLabel();
        stopSimBtn = new javax.swing.JButton();
        clearInfoLog = new javax.swing.JButton();
        selectionTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        schedulerList = new javax.swing.JList<>();
        selectLoadSchedulerType = new javax.swing.JButton();
        currentlySelectedScheduler = new javax.swing.JTextField();
        schedulerTypeLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        processesList = new javax.swing.JList<>();
        addProcessToQueue = new javax.swing.JButton();
        clearListQueue = new javax.swing.JButton();
        addAllToQueue = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listQueue = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scheduler Simulator 0.0.1a");
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("./icon.png")).getImage());
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        infoLog.setBackground(new java.awt.Color(0, 0, 0));
        infoLog.setColumns(20);
        infoLog.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        infoLog.setForeground(new java.awt.Color(255, 255, 255));
        infoLog.setRows(5);
        infoLog.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Scheduler's Info Log", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        infoLog.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(infoLog);

        startSimBtn.setBackground(new java.awt.Color(255, 255, 255));
        startSimBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Simulator/start.png"))); // NOI18N
        startSimBtn.setText("Start Scheduler");
        startSimBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startSimBtnMouseClicked(evt);
            }
        });

        diagnosticsLog.setBackground(new java.awt.Color(0, 0, 0));
        diagnosticsLog.setColumns(20);
        diagnosticsLog.setForeground(new java.awt.Color(255, 255, 255));
        diagnosticsLog.setRows(5);
        diagnosticsLog.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Diagnostics", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane5.setViewportView(diagnosticsLog);

        copyrightLabel.setText("Project 'Chronos' an Open-Source project - 0.0.1a");

        stopSimBtn.setBackground(new java.awt.Color(255, 255, 255));
        stopSimBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Simulator/stop.png"))); // NOI18N
        stopSimBtn.setText("Stop Scheduler");
        stopSimBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopSimBtnMouseClicked(evt);
            }
        });
        stopSimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopSimBtnActionPerformed(evt);
            }
        });
        stopSimBtn.setEnabled(false);

        clearInfoLog.setBackground(new java.awt.Color(255, 0, 0));
        clearInfoLog.setText("Clear Info Log");

        schedulerList.setBorder(javax.swing.BorderFactory.createTitledBorder("Schedulers List"));
        schedulerList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "First-Come, First-Serve Scheduling (FCFS)", "Shortest-Job-Next Scheduling (SJN)", "Priority Scheduling (PS)", "Shortest Remaining Time Scheduling(SRT)", "Round Robin Scheduling(RR)", "Multiple-Level Queues Scheduling (MLQ)", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(schedulerList);

        selectLoadSchedulerType.setBackground(new java.awt.Color(0, 51, 255));
        selectLoadSchedulerType.setText("Select & Load Scheduler Type");
        selectLoadSchedulerType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectLoadSchedulerTypeMouseClicked(evt);
            }
        });
        selectLoadSchedulerType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectLoadSchedulerTypeActionPerformed(evt);
            }
        });

        currentlySelectedScheduler.setEditable(false);

        schedulerTypeLabel.setText("Current Scheduler Type Loaded:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selectLoadSchedulerType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(currentlySelectedScheduler)
                    .addComponent(schedulerTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 218, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(schedulerTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentlySelectedScheduler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectLoadSchedulerType)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        selectionTab.addTab("Scheduler Selection", jPanel1);

        processesList.setBorder(javax.swing.BorderFactory.createTitledBorder("Processes List"));
        processesList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Audacity", "Blender", "File Explorer", "GCC Compiler", "GIMP", "GNU Emacs", "Geogebra", "Monitor Drivers", "Mozilla Firefox Browser", "Oracle VMBox", "System Interrupts", "System Terminal" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(processesList);

        addProcessToQueue.setBackground(new java.awt.Color(0, 51, 255));
        addProcessToQueue.setText("Add to Scheduler's List Queue");
        addProcessToQueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProcessToQueueActionPerformed(evt);
            }
        });

        clearListQueue.setBackground(new java.awt.Color(255, 0, 0));
        clearListQueue.setText("Clear Scheduler's List Queue");

        addAllToQueue.setBackground(new java.awt.Color(255, 51, 0));
        addAllToQueue.setText("Add all Processes to Queue");

        listQueue.setBorder(javax.swing.BorderFactory.createTitledBorder("List Queue"));
        jScrollPane4.setViewportView(listQueue);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearListQueue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addProcessToQueue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addAllToQueue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addProcessToQueue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearListQueue)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(addAllToQueue))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        selectionTab.addTab("Processes Selection", jPanel2);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Save Log As...");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Save Diagnostics Log As...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(copyrightLabel)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stopSimBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startSimBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearInfoLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(selectionTab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startSimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stopSimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearInfoLog)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectionTab, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(copyrightLabel))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startSimBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startSimBtnMouseClicked
        // TODO add your handling code here:
        infoLog.setText(infoLog.getText() + "Scheduler Started at: " + new Date() + '\n');
        startSimBtn.setEnabled(false);
        stopSimBtn.setEnabled(true);
    }//GEN-LAST:event_startSimBtnMouseClicked

    private void stopSimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopSimBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopSimBtnActionPerformed

    private void stopSimBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopSimBtnMouseClicked
        // TODO add your handling code here:
        infoLog.setText(infoLog.getText() + "Scheduler Stopped at: " + new Date() + '\n');
        startSimBtn.setEnabled(true);
        stopSimBtn.setEnabled(false);
        model.clear();
    }//GEN-LAST:event_stopSimBtnMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void selectLoadSchedulerTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectLoadSchedulerTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectLoadSchedulerTypeActionPerformed

    private void addProcessToQueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProcessToQueueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addProcessToQueueActionPerformed

    private void selectLoadSchedulerTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectLoadSchedulerTypeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_selectLoadSchedulerTypeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scheduler_Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scheduler_Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scheduler_Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scheduler_Simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scheduler_Simulator().setVisible(true);
            }
        });
    }
    private javax.swing.DefaultListModel model;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAllToQueue;
    private javax.swing.JButton addProcessToQueue;
    private javax.swing.JButton clearInfoLog;
    private javax.swing.JButton clearListQueue;
    private javax.swing.JLabel copyrightLabel;
    private javax.swing.JTextField currentlySelectedScheduler;
    private javax.swing.JTextArea diagnosticsLog;
    private javax.swing.JTextArea infoLog;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> listQueue;
    private javax.swing.JList<String> processesList;
    private javax.swing.JList<String> schedulerList;
    private javax.swing.JLabel schedulerTypeLabel;
    private javax.swing.JButton selectLoadSchedulerType;
    private javax.swing.JTabbedPane selectionTab;
    private javax.swing.JButton startSimBtn;
    private javax.swing.JButton stopSimBtn;
    // End of variables declaration//GEN-END:variables
}
